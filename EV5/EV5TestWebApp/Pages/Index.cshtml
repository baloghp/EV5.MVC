@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<style type="text/css">
    .not-active {
        pointer-events: none;
        cursor: default;
        text-decoration: line-through;
        
    }
</style>
<div class="text-center">
    <h1 class="display-4">Welcome to EV5.Mvc</h1>
   
</div>

<div class="row">
    <div class="col-md-12">
        <h2>It contains:</h2>
        <p>

            <ul>
                <li>
                    Plugin system that does not require separate static file deployment
                </li>
                <li>
                    Utilities for using EmbeddedFileSystem to serve static content and html as ActionResult
                </li>
                <li>
                    A View Engine that uses static embedded html as markup and a separate c# view class for markup (DOM) manipulation.
                </li>
            </ul>
        </p>

        <p>
            This sample application will use a scenario where an existing application needs to be extended with a landing page.
            The landing page has a style sheet and a set of static resources which are alien to the original application's resources.
            Thus it is a requirement to achieve maximum separation.
            The landing page is provided by <a href="http://startbootstrap.com/template-overviews/landing-page/">StartBootstrap</a>.
        </p>
        <p>
            The sample app will show how to create a plugin (EV5.Mvc.Samples.Embedded) via EV5.Mvc that includes only 1 dll and it is able to show the landing page similar to a static html.
        </p>
        <p>
            The EV5.Mvc.Samples.ViewEngine plugin project shows the same landing page, but this time using the EmbeddedViewEngine.
            Actual MVC views are used, which have a master page and are using partial views for specific parts of the page.
        </p>
    </div>
</div>
<div class="row">
    <div class="col-md-6">
        <h2>Embedded File System</h2>
        <p>
            Embedded file system allows for storing and retrieving any asset stored as an embedded resource via a URL.
        </p>
        <ul class="nav nav-stacked" style="display: block;">
            <li><a href="/Tutorial/RetrieveHtml">1. Setting up the Embedded File System and retrieving an image.</a></li>
            <li><a href="/Tutorial/HtmlResult">2. Retrieve an HTML using the Embedded File system, or EmbeddedHtmlStringResult</a></li>
            <li><a href="/Tutorial/RazorResult" class="not-active">3. Using embedded Razor views</a></li>
        </ul>

    </div>
    <div class="col-md-6">
        <h2>Embedded Plugin System</h2>
        <p>
            Create a drag and drop plugin.
        </p>
        <ul class="nav nav-stacked" style="display: block;">
            <li><a href="/Tutorial/CreatePlugin" class="not-active">4. Creating EmbeddedPlugins using IEmbeddedPlugin interface </a></li>
            <li><a href="/Tutorial/InitializePlugin" class="not-active">5. Initializing plugins for your application</a></li>
            <li><a href="/Tutorial/MEFCatalog" class="not-active">6. Application MEF catalog</a></li>

        </ul>

    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <h2>Embedded View Engine</h2>
        <p>Embedded View Engine uses embedded html files as primary source for view markup, for every such markup it associates a view class that can manipulate the markup's DOM.</p>
        <div class="row">
            <div class="col-md-6">
                <ul class="nav nav-stacked" style="display: block;">
                    <li><a href="/Plugins/ViewEngineSample/Tutorial/RegisterViewEngine">7. Register the Embedded View Engine</a></li>
                    <li><a href="/Plugins/ViewEngineSample/Tutorial/SimpleHtml">8. Simple html view</a></li>
                    <li><a href="/Plugins/ViewEngineSample/Tutorial/SimpleMaster">9. Simple html view with a MasterPage</a></li>
                    <li><a href="/Plugins/ViewEngineSample/Tutorial/SimpleMasterAndPartial">10. Simple html view with MasterPage and Partial Views</a></li>
                    <li><a href="/Plugins/ViewEngineSample/Tutorial/Sections">11. Sections</a></li>


                </ul>
            </div>
            <div class="col-lg-6">
                <ul class="nav nav-stacked" style="display: block;">
                    <li><a href="/Plugins/ViewEngineSample/Tutorial/Bundles">12. Bundles</a></li>
                    <li><a href="/Plugins/ViewEngineSample/Tutorial/TypedViews">13. Typed views</a></li>
                    <li><a href="/Plugins/ViewEngineSample/Tutorial/DataBinding">14. DataBinding</a></li>
                    <li><a href="/Plugins/ViewEngineSample/Tutorial/Localization">15. Handling UI resources</a></li>
                    <li><a href="/Plugins/ViewEngineSample/Tutorial/EveAttributes">16. EVE html attributes</a></li>
                    <li><a href="/Plugins/ViewEngineSample/Tutorial/ExtendingEve">17. Extending view functionality</a></li>
                    <li><a href="/Plugins/ViewEngineSample/Tutorial/ShortViewNames">18. Short ViewNames</a></li>

                </ul>
            </div>
        </div>

    </div>

</div>
<div class="row">
    <div class="col-md-12">
        <h2>Embedded View Engine Utility Services</h2>
        <p></p>
        <div class="row">
            <div class="col-md-6">
                <ul class="nav nav-stacked navblock" style="display: block;">
                    <li ><a href="/EmbeddedServices/GetActions">1. Get All available actions in the application</a></li>
                    <li ><a href="/EmbeddedServices/GetContentRootDirectoryContents">2. Get ContentRootFileProvider Files</a></li class="navblock">
                    <li ><a href="/EmbeddedServices/GetWebRootDirectoryContents">3. Get WebRootFileProvider Files</a></li>
                </ul>
            </div>
            <div class="col-lg-6">
                <ul class="nav nav-stacked" style="display: block;">
                    

                </ul>
            </div>
        </div>

    </div>

</div>